https://stackoverflow.com/questions/52827236/flutter-get-device-mac-address
https://www.courier.com/blog/send-and-automate-push-notifications-using-flutter-firebase-and-node-js/ 
https://stackoverflow.com/questions/71725807/flutter-multicast-dns-how-to-test-network-discovery-with-mdns


Flutter Firebase
1. The easiest way to get you started is to use the FlutterFire CLI.

Before you continue, make sure to:

Install the Firebase CLI and log in (run firebase login)
Install the Flutter SDK
Create a Flutter project (run flutter create)

2. Install and run the FlutterFire CLI
From any directory, run this command:

dart pub global activate flutterfire_cli
Then, at the root of your Flutter project directory, run this command:

flutterfire configure --project=attendez-fd983
This automatically registers your per-platform apps with Firebase and adds a lib/firebase_options.dart configuration file to your Flutter project.

3. Initialize Firebase and add plugins
To initialize Firebase, call Firebase.initializeApp from the firebase_core package with the configuration from your new firebase_options.dart file:

import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';

// ...

await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
);
Then, add and begin using the Flutter plugins for the Firebase products you'd like to use.

Note: If you're using Analytics or Performance Monitoring, you may need to follow a few additional setup steps.